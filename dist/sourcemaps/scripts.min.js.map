{"version":3,"sources":["creator.js","main.js"],"names":["NewSet","constructor","motherElement","this","setBlockElement","setButtonElement","inputElements","createSetBlock","document","createElement","className","setPointElement","appendChild","let","i","labelElement","inputElement","textElement","setAttribute","weigntValidation","repValidation","push","innerText","addBtnLogic","input","addEventListener","val","event","target","value","replace","match","element","that","add","submit","forEach","removeAttribute","removeEventListener","edit","console","log","createSetElement","call","NewExercise","name","xrcsName","xrcsBlockElement","xrcsInfoLastTraining","xrcsSetsElement","inputsElements","init","createBlock","showBlock","xrcsInfoElement","createInfoElement","xrcsInfoNameElement","xrcsSetElement","inputElemets","getElementById","close","result","innerHTML","setsVal","set","row","text","weight","rep","removeChild","xrcsList","resultCompil","lastXrcsBlock","item","length","classList","setTimeout","remove","$","click","newXrcs","toLocalStorage","date","Date","localStorage","setItem","JSON","stringify"],"mappings":"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","file":"../scripts/scripts.min.js","sourcesContent":["\n\n// $('.add_exercise').click(() => {\n//     $('.container#exercises').append($('template#1').html());\n    \n// })\n\n// class RowSet {\n//     constructor(element) {\n//         this.element = element;\n//         this.button = element.find('.add');\n//         this.button.click(() => {\n//             const weight = this.element.find('.weight input').val();\n//             const reps = this.element.find('.repeats input').val();\n//             if(true) {\n//                 const doneSet = $('template#2').html();\n//                 this.element.parent().prepend(doneSet);\n//                 console.log(this.element.parent())\n//             }\n//         })\n//     }\n//     show() {\n//         this.button.click(() => {\n//             console.log(this.element.find('.weight input').val())\n//             console.log(this.element.find('.repeats input').val())\n//         })\n//     }\n  \n\n// }\n\n\n// let observer = new MutationObserver(mutation => {\n//     const element = mutation[0].addedNodes[1];\n//     let rowset = new RowSet($(element).find('.new_set'));\n\n// });\n// observer.observe($('.container#exercises')[0], {childList: true});\n\n\n","(function () {\n\n    class NewSet {\n        constructor (motherElement) {\n            this.setBlockElement = null;\n            this.setButtonElement = null;\n            this.inputElements = [];\n            this.motherElement = motherElement;\n            this.createSetBlock();\n            return [this.setBlockElement, this.inputElements];\n        }\n        createSetBlock () {\n            const that = this;\n            this.setBlockElement = document.createElement('div');\n            this.setBlockElement.className = 'new_set';\n\n            const setPointElement = document.createElement('div');\n            setPointElement.className = 'set-point'\n            this.setBlockElement.appendChild(setPointElement);\n\n            for (let i = 0; i < 2; i++) {\n                const labelElement = document.createElement('label');\n                labelElement.className = (i === 0? \"weight\" : \"repeats\");\n\n                const inputElement = document.createElement('input');\n                inputElement.setAttribute('type', 'number');\n                i === 0 ? this.weigntValidation(inputElement) : this.repValidation(inputElement);\n                this.inputElements.push(inputElement);\n\n                const textElement = document.createElement('span');\n                textElement.innerText = (i === 0? \"kg\" : \"rep\")\n\n                labelElement.appendChild(inputElement);\n                labelElement.appendChild(textElement);\n                this.setBlockElement.appendChild(labelElement);\n            }\n\n            const setButtonElement = document.createElement('div');\n            setButtonElement.className = 'btn add';\n            setButtonElement.innerText = '+';\n            this.addBtnLogic(setButtonElement);\n            \n\n            this.setButtonElement = setButtonElement;\n            this.setBlockElement.appendChild(this.setButtonElement);\n        }  \n        weigntValidation (input) {\n            input.addEventListener('input', (event) => {\n                const val = event.target.value.replace(/\\D/g, '').match(/(\\d{0,2})(\\d{0,2})/);\n                event.target.value = !val[2] ? val[1] : val[1] + '.' + val[2];\n            })\n        }\n        repValidation (input) {\n            input.addEventListener('input', (event) => {\n                const val = event.target.value.replace(/\\D/g, '').match(/(\\d{0,2})/);\n                event.target.value = val[1];\n\n            })\n        }\n        addBtnLogic (element) {\n            const that = this;\n            element.addEventListener('click', function add () {\n                if(!that.inputElements[0].value || !that.inputElements[1].value) {\n                    console.log('empty val')\n                    return\n                }\n                this.removeEventListener('click', add);\n                this.addEventListener('click', edit);\n\n                function submit () {\n                    that.setButtonElement.innerText = 'sbmt';\n                    that.inputElements.forEach( input => {\n                        input.removeAttribute('disabled');\n                    });\n                    this.removeEventListener('click', submit);\n                    this.addEventListener('click', edit)\n                }\n\n                function edit () {\n                    if(!that.inputElements[0].value || !that.inputElements[1].value) {\n                        console.log('empty val')\n                        return\n                    }\n                    that.setButtonElement.innerText = 'edit';\n                    that.inputElements.forEach( input => {\n                        input.setAttribute('disabled', 'disabled');\n                    })\n                    this.removeEventListener('click', edit);\n                    this.addEventListener('click', submit);\n                }\n                \n                that.motherElement.createSetElement()\n                edit.call(this);\n            });\n        } \n\n    }\n\n\n\n    class NewExercise {\n        constructor (name) {\n            this.xrcsName = name;\n            this.xrcsBlockElement = null;\n            this.xrcsInfoLastTraining = null;\n            this.xrcsSetsElement = null;\n            this.inputsElements = []\n            this.init()\n        }\n        init() {\n            this.createBlock();\n            this.showBlock()\n        }\n        createBlock () {\n            this.xrcsBlockElement = document.createElement('div');\n            this.xrcsBlockElement.className = 'block exercise'\n            \n            const xrcsInfoElement = this.createInfoElement();\n            this.xrcsBlockElement.appendChild(xrcsInfoElement);\n            \n            this.xrcsSetsElement = document.createElement('div');\n            this.xrcsSetsElement.className = 'exercise__sets';\n            this.xrcsBlockElement.appendChild(this.xrcsSetsElement);\n\n            this.createSetElement();\n            \n        }\n        createInfoElement () {\n            const xrcsInfoElement = document.createElement('div');\n            xrcsInfoElement.className = 'exercies__info';\n\n            const xrcsInfoNameElement = document.createElement('div');\n            xrcsInfoNameElement.className = 'name';\n            xrcsInfoNameElement.innerText = this.xrcsName + ':';\n\n            //create \"last_training\"\n            this.xrcsInfoLastTraining = document.createElement('div');\n            this.xrcsInfoLastTraining.className = 'last_training';\n\n            xrcsInfoElement.appendChild(xrcsInfoNameElement);\n            xrcsInfoElement.appendChild(this.xrcsInfoLastTraining);\n            return xrcsInfoElement;\n        }\n        createSetElement () {\n            const [xrcsSetElement, inputElemets] = new NewSet(this);\n            this.inputsElements.push(inputElemets);\n            this.xrcsSetsElement.appendChild(xrcsSetElement);\n        }\n        showBlock () {\n            const motherBlockElement = document.getElementById('exercises');\n            motherBlockElement.appendChild(this.xrcsBlockElement)\n            \n        }\n        close(result) {\n            this.xrcsInfoLastTraining.innerHTML = '';\n            result.setsVal.forEach( set => {\n                const row = document.createElement('div');\n                const text = `${set.weight} kg/${set.rep} repearts`;\n                row.innerText = text;\n                this.xrcsInfoLastTraining.appendChild(row);\n            })\n            this.xrcsBlockElement.removeChild(this.xrcsSetsElement)\n        }\n    }\n\n    let xrcsList = []\n    \n    $('#add-exercise').click(() => {\n        const name = $('#xrcsName').val()\n        $('#xrcsName').val('')\n        if(!name) return \n        const lastXrcsBlock = xrcsList[xrcsList.length - 1];\n        if(lastXrcsBlock) {\n            resultCompil(lastXrcsBlock)\n        }\n        newXrcs = new NewExercise(name);\n        xrcsList.push({name : name, element : newXrcs});\n    });\n\n    function resultCompil (lastXrcsBlock) {\n        let result = {\n            name : lastXrcsBlock.name,\n            setsVal : []\n        }\n        lastXrcsBlock.element.inputsElements.forEach(item => {\n            if(!item[0].value || !item[1].value) return\n            result.setsVal.push({\n                weight : item[0].value,\n                rep : item[1].value\n            });\n        });\n        if (result.setsVal.length === 0) {\n            lastXrcsBlock.element.xrcsBlockElement.classList.add('remove')\n            setTimeout(() => {\n                document.getElementById('exercises').removeChild(lastXrcsBlock.element.xrcsBlockElement);\n                xrcsList.remove(lastXrcsBlock)\n            }, 3000)\n        } else {\n            lastXrcsBlock.element.close(result);\n            lastXrcsBlock.result = result\n            console.log(xrcsList)\n        }\n    }\n\n\n    $('#finish').click(() => {\n        const lastXrcsBlock = xrcsList[xrcsList.length - 1];\n        if(lastXrcsBlock) {\n            resultCompil(lastXrcsBlock)\n        }\n        let toLocalStorage = [];\n        xrcsList.forEach(item => {\n            toLocalStorage.push({\n                date : new Date(),\n                name : item.name,\n                setsVal : item.result.setsVal\n            });\n            document.getElementById('exercises').removeChild(item.element.xrcsBlockElement);\n        });\n        console.log(toLocalStorage)\n        localStorage.setItem('training', JSON.stringify(toLocalStorage));\n    })\n})();"]}